// preset form values if we receive a userdata object //
- user = typeof(udata) != 'undefined' ? udata : { }
// store the userId on the client side in a hidden input field //
input(type='hidden', value= user._id)#userId

- matches = typeof(matches) != 'undefined' ? matches : {}
- players = typeof(players) != 'undefined' ? players : {}
- groups = typeof(groups) != 'undefined' ? groups : {}
- countries = typeof(countries) != 'undefined' ? countries : {}
- guesses = typeof(guesses) != 'undefined' ? guesses : {}
- topGroupScorers = typeof(topGroupScorers) != 'undefined' ? topGroupScorers : {}
- topTeams = typeof(topTeams) != 'undefined' ? topTeams : {}
- topScorer = typeof(topScorer) != 'undefined' ? topScorer : {}
- topAssister = typeof(topAssister) != 'undefined' ? topAssister : {}
- worstRecord = typeof(worstRecord) != 'undefined' ? worstRecord : {}
- messages = typeof(messages) != 'undefined' ? messages : {}

#account-form-container
 div
  form(action='/guesses',method='post').form-horizontal.well.span6
    h2 My guesses
    p Here are your current guesses
    - if(messages == {})
      p.alert-success Your guesses were successfully stored!
    - else 
      p.alert-danger #{messages.guessError} #{messages.topAssisterError} #{messages.topScorerGroupError} #{messages.topScorerTournamentError} #{messages.topTournamentError} #{messages.worstTournamentError}

    h3 Special guesses
    h4 Group Topscorers
    div(data-role='fieldcontain')
        fieldset
            - for (group in groups)
              - var selectedGroupTopScorer = -1
              input(type="hidden", value=groups[group].id, name='group_order')
              #clist-cg.control-group
                label.control-label(for='#group_top_scorer') Group #{groups[group].name}:
                .controls
                    select#group_top_scorer(name='group_top_scorer')
                      - for (country in countries)
                        - if(countries[country].group_id == groups[group].id)
                          - for(groupTopScorer in topGroupScorers)
                            - if(topGroupScorers[groupTopScorer].group_id == groups[group].id)
                              - selectedGroupTopScorer = topGroupScorers[groupTopScorer].scorer_id
                          - for(player in players)
                            - if(countries[country].id == players[player].country_id)
                              option(selected = selectedGroupTopScorer == players[player].id, id=players[player].id, value=players[player].id)= players[player].name + ' (' + countries[country].name + ')'
    h4 Tournament Topscorer
    div(data-role='fieldcontain')
        fieldset
            #clist-cg.control-group
                label.control-label(for='tournament_top_scorer') Topscorer:
                .controls
                    select#tournament_top_scorer(name='tournament_top_scorer')
                      - for (country in countries)
                        - for(player in players)
                          - if(countries[country].id == players[player].country_id)
                            - if(topScorer[0] == undefined)
                              - var mvp = -1
                            - else
                              - var mvp = topScorer[0].scorer_id
                            option(selected = players[player].id == mvp, id=players[player].id, value=players[player].id)= players[player].name + ' (' + countries[country].name + ')'
    h4 Tournament Top-assister
    div(data-role='fieldcontain')
        fieldset
            #clist-cg.control-group
                label.control-label(for='tournament_top_assister') Top-assister:
                .controls
                    select#tournament_top_assister(name='tournament_top_assister')
                      - for (country in countries)
                        - for(player in players)
                          - if(countries[country].id == players[player].country_id)
                            - if(topAssister[0] == undefined)
                              - var top = -1
                            - else
                              - var top = topAssister[0].player_id
                            option(selected = players[player].id == top, id=players[player].id, value=players[player].id)= players[player].name + ' (' + countries[country].name + ')'
    h4 Tournament Worst Record
    div(data-role='fieldcontain')
        fieldset
            #clist-cg.control-group
                label.control-label(for='tournament_worst_record') Worst:
                .controls
                    select#tournament_worst_record(name='tournament_worst_record')
                      - for (country in countries)
                        - if(worstRecord[0] == undefined)
                          - var worst = -1
                        - else
                          - var worst = worstRecord[0].country_id
                        option(selected= countries[country].id == worst, id=countries[country].id, value=countries[country].id)= countries[country].name
    h4 Tournament Top Teams
    div(data-role='fieldcontain')
        fieldset
            - for (var i = 1 ; i < 4 ; i++)
              - var selectedTopTeam = -1
              #clist-cg.control-group
                  label.control-label(for='tournament_place') #{i}. place:
                  .controls
                    select#tournament_place(name='tournament_place')
                      - for (country in countries)
                        - for(team in topTeams)
                          - if(i == topTeams[team].place && countries[country].id == topTeams[team].country_id)
                            - selectedTopTeam = topTeams[team].country_id
                        option(selected=selectedTopTeam == countries[country].id, id=countries[country].id, value=countries[country].id)= countries[country].name
    h3 Match guesses (Group : Home - Away)
    div(data-role='fieldcontain')
        fieldset
            - for (match in matches)
              - var homeGoals = 0
              - var awayGoals = 0
              - var scorer = 0
              - for (guess in guesses)
                - if (guesses[guess].matchup_id == matches[match].id)
                  - homeGoals = guesses[guess].home_goals
                  - awayGoals = guesses[guess].away_goals
                  - scorer = guesses[guess].scorer_id

              input(type="hidden", value=matches[match].id, name='match_order')
              br
              h4 #{matches[match].group} : #{matches[match].home_team} - #{matches[match].away_team}
                cg.control-group
                    label.control-label(for='home_goals') Home goals:
                    .controls
                        select#home_goals(name='home_goals')
                          - for (var i = 0; i < 100; ++i) {
                            option(selected=homeGoals == i)= i
                          - }
                    br
                    label.control-label(for='away_goals') Away goals:
                    .controls
                        select#away_goals(name='away_goals')
                          - for (var i = 0; i < 100; ++i) {
                            option(selected=awayGoals == i)= i
                          - }
                    br
                    label.control-label(for='match_scorer') Scorer:
                    .controls
                        select#match_scorer(name='match_scorer')
                          - for (player in players)
                            - if(players[player].country_id == matches[match].home_team_id || players[player].country_id == matches[match].away_team_id)
                              - var currentCountry = players[player].country_id == matches[match].home_team_id ? matches[match].home_team : matches[match].away_team;
                              option(selected= scorer == players[player].id, id=players[player].id, value=players[player].id)= players[player].name + ' (' + currentCountry + ')'
    br
    //div(data-role='fieldcontain')
    //input(type='submit',value='Submit My Guesses',data-transition='fade', data-theme='c')

// display form errors in a custom modal window //

include modals/form-errors
